-- Wed May 15 21:11:07 CLT 2013
inicio proyecto en grails

-- Wed May 15 23:38:17 CLT 2013
Al fin le dedique una hora aproximadamente para configurar un proyecto grails de cero usando grails 2.2.2.
Al parecer hay algun problema con el plugin mongodb 1.2.0 y Grails 2.2.2 porque costó configurarlo sin hibernate, así que dejé hibernate con configuración default y use mapWith="mongo" en el domain Dato.

Los tiempos que estoy obteniendo (usando wrk https://github.com/wg/wrk):


Running 10s test @ http://localhost:8080/cosa-grails/create
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    19.87ms   28.05ms 183.91ms   90.15%
    Req/Sec     0.00      0.00     0.00    100.00%
  6555 requests in 10.00s, 2.69MB read
  Socket errors: connect 0, read 0, write 0, timeout 1
Requests/sec:    655.34
Transfer/sec:    275.16KB

Fijense que la collection tiene una constraint para evitar duplicados en codigo.
Estos tiempos son bastantes buenos para inserciones.

-- Thu May 16 20:20:14 CLT 2013
Implementado list, y modificado create.
Modificamos el rearme para explicar el benchmark.

Benchmark: 


Running 10s test @ http://localhost:8080/cosa-grails/create
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    55.65ms   20.44ms 110.12ms   69.40%
    Req/Sec     0.00      0.00     0.00    100.00%
  1825 requests in 10.00s, 4.85MB read
  Socket errors: connect 0, read 0, write 0, timeout 1
Requests/sec:    182.47
Transfer/sec:    496.66KB


Running 10s test @ http://localhost:8080/cosa-grails/list
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    21.53ms   32.71ms 208.38ms   92.31%
    Req/Sec     0.00      0.00     0.00    100.00%
  5317 requests in 10.00s, 14.19MB read
Requests/sec:    531.65
Transfer/sec:      1.42MB


-- Thu May 16 20:53:36 CLT 2013
pausa para comer

-- Thu May 16 21:32:14 CLT 2013
programamos el despliegue de información

-- Sun May 19 13:46:21 CLT 2013

Entre el sábado y hoy le dedicamos en total unas 6 horas para armar el proyecto Scala Play Framework.

Los tiempos que tenemos son:


Running 10s test @ http://localhost:9000/create
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     7.32ms    7.14ms  43.66ms   88.55%
    Req/Sec     0.00      0.00     0.00    100.00%
  11733 requests in 10.01s, 11.14MB read
Requests/sec:   1172.18
Transfer/sec:      1.11MB


Running 10s test @ http://localhost:9000/jsonList
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    11.07ms    3.66ms  21.19ms   64.39%
    Req/Sec     0.00      0.00     0.00    100.00%
  9326 requests in 10.00s, 8.85MB read
Requests/sec:    932.18
Transfer/sec:      0.88MB


Running 10s test @ http://localhost:9000/list
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    12.37ms    6.09ms  65.90ms   91.85%
    Req/Sec     0.00      0.00     0.00    100.00%
  8244 requests in 10.00s, 37.11MB read
Requests/sec:    824.27
Transfer/sec:      3.71MB

-- Mon May 20 00:00:33 CLT 2013
Finalmente me decidí a incluir un demo en nodejs.
Empecé alrededor de las 21:00 y con la pausa para ver juego de tronos, terminé este ejemplo.
Los tiempos:


Running 10s test @ http://localhost:3000/create
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    12.92ms    6.84ms  42.86ms   81.34%
    Req/Sec     0.00      0.00     0.00    100.00%
  8468 requests in 10.00s, 11.90MB read
Requests/sec:    846.66
Transfer/sec:      1.19MB


Running 10s test @ http://localhost:3000/jsonList
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     9.00ms    3.01ms  18.69ms   70.90%
    Req/Sec     0.00      0.00     0.00    100.00%
  11440 requests in 10.00s, 16.08MB read
Requests/sec:   1143.80
Transfer/sec:      1.61MB


Running 10s test @ http://localhost:3000/list
  2 threads and 10 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    44.50ms   17.65ms 184.96ms   85.93%
    Req/Sec     0.00      0.00     0.00    100.00%
  2292 requests in 10.00s, 5.66MB read
Requests/sec:    229.15
Transfer/sec:    579.00KB
Mon May 20 20:31:53 CLT 2013
